plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "jacoco"
	id "org.sonarqube" version "3.3"
}

group = 'com.william.yataco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.1'
	implementation 'org.projectlombok:lombok:1.18.22'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:junit-jupiter:1.16.3"
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
		property "sonar.login", "admin"
		property "sonar.password", "test"
		property "sonar.language", "java"
		property "sonar.scm.disabled", "True"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.exclusions", [
				"**/*Application.java",
				"**/CustomRestTemplateInterceptor.java"
		]
		property "sonar.projectName", "$rootProject.name"
		property "sonar.projectKey", "$rootProject.name"
	}
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/william/yataco/testservice/infraestructure/configuration/CustomRestTemplateInterceptor.class",
					"com/william/yataco/testservice/Application.class"])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}
			excludes = [

			]
		}
	}
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
